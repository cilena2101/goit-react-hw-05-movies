{"version":3,"file":"static/js/278.555a5089.chunk.js","mappings":"oKAmBA,IAjBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAACC,GACX,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GAMlB,KAGN,C,iHCgCD,UA5Ce,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeL,EAAaM,IAAI,WACtC,GAAKD,GAAiBH,EAAtB,CAEA,IAAMK,EAAiB,mCAAG,8GAEKC,EAAAA,EAAAA,IAAgBH,GAFrB,OAEhBI,EAFgB,OAGtBX,EAAUW,GAHY,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDASvBJ,GAX2C,CAY5C,GAAE,CAACP,EAAcE,IAOlB,OACE,iCACE,kBACEU,KAAK,OACLC,YAAY,aACZC,WAAS,EACTC,MAAOf,EAAaM,IAAI,YAAc,GACtCU,SAAU,SAAAC,GAAG,OAAIhB,EAAgB,CAAEiB,QAASD,EAAIE,OAAOJ,OAA1C,KAGf,mBAAQK,QAfS,WACnBnB,EAAgB,CAAEiB,QAASlB,EAAaM,IAAI,aAC5CH,GAAiB,EAClB,EAYG,oBAEChB,EAAOkC,OAAS,IAAK,SAAC,IAAD,CAAWlC,OAAQA,MAI9C,C","sources":["components/MovieList/MovieList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map((movie) => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchClicked, setSearchClicked] = useState(false);\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('movieId');\n    if (!currentQuery || !searchClicked) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieDetails(currentQuery);\n        setMovies(movieByQuery);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieByQuery();\n  }, [searchParams, searchClicked]);\n\n  const handleSearch = () => {\n    setSearchParams({ movieId: searchParams.get('movieId') });\n    setSearchClicked(true);\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={searchParams.get('movieId') || ''}\n        onChange={evt => setSearchParams({ movieId: evt.target.value })}\n      />\n\n      <button onClick={handleSearch}>Search</button>\n\n      {movies.length > 0 && <MovieList movies={movies} />}\n\n    </>\n  );\n};\n\nexport default Movies;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { useState, useEffect } from 'react';\n// import { useSearchParams, Link } from 'react-router-dom';\n// import { getMovieDetails } from 'services/api';\n// import MovieList from 'components/MovieList';\n// // import Form from 'components/Form/Form';\n\n// // import { Button } from 'components/Button/Button';\n\n// const Movies = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [searchParams, setSearchParams] = useSearchParams();\n\n//   useEffect(() => {\n//     const currentQuery = searchParams.get('movieId');\n//     if (!currentQuery) return;\n\n//     const fetchMovieByQuery = async () => {\n//       try {\n//         const movieByQuery = await getMovieDetails(currentQuery);\n//         setMovies(movieByQuery);\n//       } catch (evt) {\n//         console.log(evt);\n//       }\n//     };\n//     fetchMovieByQuery();\n//   }, [searchParams]);\n\n//   const visibleMovies = movies.filter(movie => movie.includes(searchParams.get('movieId')));\n\n\n//   return (\n//     <>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Name movie\"\n//         autoFocus\n//         value={searchParams.get('movieId') || ''}\n//         onChange={evt => setSearchParams({ movieId: evt.target.value })}\n//       />\n//   <button onClick={() => setSearchParams({ movieId: searchParams.get('movieId') })}>\n//   Search\n// </button>\n\n//       {/* <Form setSearchParams={setSearchParams} /> */}\n//       {/* {movies.length > 0 && <MovieList movies={movies} />} */}\n\n//       {visibleMovies.length > 0 && <MovieList movies={visibleMovies} />}\n//     </>\n//   );\n// };\n\n// export default Movies;\n\n\n\n\n// import { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n// import { getMovieDetails } from 'services/api';\n// import MovieList from 'components/MovieList';\n\n// const Movies = ({ history }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [searchParams, setSearchParams] = useSearchParams();\n\n//   useEffect(() => {\n//     const currentQuery = searchParams.get('movieId');\n//     if (!currentQuery) return;\n\n//     const fetchMovieByQuery = async () => {\n//       try {\n//         const movieByQuery = await getMovieDetails(currentQuery);\n//         setMovies(movieByQuery);\n//       } catch (evt) {\n//         console.log(evt);\n//       }\n//     };\n//     fetchMovieByQuery();\n//   }, [searchParams]);\n\n//   const visibleMovies = movies.filter(movie => movie.name.includes(searchParams.get('movieId')));\n\n//   const handleSearch = () => {\n//     const movieId = searchParams.get('movieId');\n//     history.push(`/?movieId=${movieId}`);\n//     setSearchParams({ movieId });\n//   };\n\n//   return (\n//     <>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Name movie\"\n//         autoFocus\n//         value={searchParams.get('movieId') || ''}\n//         onChange={evt => setSearchParams({ movieId: evt.target.value })}\n//       />\n\n//       <button onClick={handleSearch}>Search</button>\n\n//       {visibleMovies.length > 0 && <MovieList movies={visibleMovies} />}\n//     </>\n//   );\n// };\n\n// export default Movies;\n\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchClicked","setSearchClicked","useEffect","currentQuery","get","fetchMovieByQuery","getMovieDetails","movieByQuery","console","log","type","placeholder","autoFocus","value","onChange","evt","movieId","target","onClick","length"],"sourceRoot":""}